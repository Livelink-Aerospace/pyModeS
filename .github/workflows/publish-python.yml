# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish Python

on:
  workflow_dispatch:

  release:
    types: [published]
  # for testing
  # push:
  #   branches: [ "main" ]
  #   tags:
  #     - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get install git
        python -m pip install --upgrade pip
        python -m pip install wheel twine
        python -m pip install keyring
        pip install keyrings.google-artifactregistry-auth
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Get tags # The checkut operation does not get tags so we need to do it
      run: git fetch --tags -f origin

    - name: Get version from tag
      id: tag-version
      run: $(git describe --tags --abbrev=0) >> $GITHUB_OUTPUT

    - name: Build python package
      run: python3 -m pip wheel --wheel-dir ./build  .

    - name: write key file
      working-directory: ./build
      run: 'echo "$JSON_KEY" > key.json'
      shell: bash
      env:
        JSON_KEY: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Upload to Artifact Registry
      working-directory: ./build
      run: |
        gcloud auth activate-service-account --key-file=key.json
        gcloud config set project aero-chain-home
        gcloud config set artifacts/repository python-packages
        gcloud config set artifacts/location europe-west2
        gcloud config set account ci-package-uploader@aero-chain-home.iam.gserviceaccount.com
        gcloud artifacts print-settings python  > ~/.pypirc
        python -m twine upload --repository python-packages ./*
